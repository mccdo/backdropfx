CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )
PROJECT( backdropFX )

SET( CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMakeModules;${CMAKE_MODULE_PATH}" )

SET( LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single directory for all libraries." )
MAKE_DIRECTORY( ${LIBRARY_OUTPUT_PATH} )
MARK_AS_ADVANCED( LIBRARY_OUTPUT_PATH )

SET( EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin CACHE PATH "Single directory for all executables." )
MAKE_DIRECTORY( ${EXECUTABLE_OUTPUT_PATH} )
MARK_AS_ADVANCED( EXECUTABLE_OUTPUT_PATH )

IF( WIN32 AND MSVC )
    OPTION( WIN32_USE_MP "Build with multiple processes (/MP option; VS 2005 and above)." ON )
    MARK_AS_ADVANCED( WIN32_USE_MP )
    IF( WIN32_USE_MP )
        SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP" )
    ENDIF( WIN32_USE_MP )
ENDIF( WIN32 AND MSVC )

INCLUDE( CMakeMacros )

include( FindOSGHelper )

FIND_PACKAGE( OSGEphemeris REQUIRED )
FIND_PACKAGE( OSGWorks REQUIRED )
FIND_PACKAGE( OSGWxTree )
FIND_PACKAGE( wxWidgets COMPONENTS base core gl )
FIND_PACKAGE( OpenGL REQUIRED )
FIND_PACKAGE( Boost REQUIRED )
FIND_PACKAGE( PNG REQUIRED )

# Removed per redmine issue 384.
# include( FindBulletHelper )
# FIND_PACKAGE( OSGBulletPlus )
# FIND_PACKAGE( OSGBullet )

# Add project-wide include & lib paths
INCLUDE_DIRECTORIES( 
    ${PROJECT_SOURCE_DIR}/include
    ${OSGEPHEMERIS_INCLUDE_DIR}
    ${OSGWORKS_INCLUDE_DIR}
    ${OSG_INCLUDE_DIRS}
    ${OPENGL_INCLUDE_DIR}
    ${Boost_INCLUDE_DIRS}
    ${PNG_INCLUDE_DIR}
)
IF( OSGBULLETPLUS_FOUND )
    INCLUDE_DIRECTORIES( ${OSGBULLETPLUS_INCLUDE_DIR} )
ENDIF( OSGBULLETPLUS_FOUND )
IF( OSGBULLET_FOUND )
    INCLUDE_DIRECTORIES( ${OSGBULLET_INCLUDE_DIR} )
ENDIF( OSGBULLET_FOUND )
IF( BULLET_FOUND )
    OPTION( BDFX_USE_DOUBLE_PRECISION "Use Bullet built with double precision" OFF )
    IF( BDFX_USE_DOUBLE_PRECISION )
        ADD_DEFINITIONS( -DBT_USE_DOUBLE_PRECISION)
    ENDIF( BDFX_USE_DOUBLE_PRECISION )

    INCLUDE_DIRECTORIES(
        ${BULLET_INCLUDE_DIRS}
    )
ENDIF( BULLET_FOUND )
IF( OSGWXTREE_FOUND )
    INCLUDE_DIRECTORIES(
        ${OSGWXTREE_INCLUDE_DIR}
        ${wxWidgets_INCLUDE_DIRS}
    )
ENDIF( OSGWXTREE_FOUND )
# HACK: Not sure why this is necessary, but linket can't find debug lib without it.
LINK_DIRECTORIES(
    ${EXECUTABLE_OUTPUT_PATH}/Debug
)

OPTION( BDFX_PROFILE_ENABLE "Select to enable profiling code and profiling console output." OFF )
IF( BDFX_PROFILE_ENABLE )
    ADD_DEFINITIONS( -D__BDFX_PROFILE_ENABLE )
ENDIF( BDFX_PROFILE_ENABLE )


OPTION( BDFX_BUILD_APPS "Enable to build applications" ON )
IF( BDFX_BUILD_APPS )
    ADD_SUBDIRECTORY( apps )
ENDIF( BDFX_BUILD_APPS )

OPTION( BDFX_BUILD_PROTOS "Enable to build prototypes" ON )
IF( BDFX_BUILD_PROTOS )
    ADD_SUBDIRECTORY( protos )
ENDIF( BDFX_BUILD_PROTOS )

OPTION( BDFX_BUILD_TESTS "Enable to build Tests" ON )
IF( BDFX_BUILD_TESTS )
    ADD_SUBDIRECTORY( tests )
ENDIF( BDFX_BUILD_TESTS )

OPTION( BDFX_BUILD_EXAMPLES "Enable to build Examples" ON )
IF( BDFX_BUILD_EXAMPLES )
    ADD_SUBDIRECTORY( examples )
ENDIF( BDFX_BUILD_EXAMPLES )

ADD_SUBDIRECTORY( src/backdropFX )



#
# Doxygen
option( BACKDROPFX_DOCUMENTATION "Enable to create build target for Doxygen documentation." OFF )
mark_as_advanced( CLEAR BACKDROPFX_DOCUMENTATION )
if( BACKDROPFX_DOCUMENTATION )
    FIND_PACKAGE( Doxygen REQUIRED )
    SET( HAVE_DOT "NO" )
    IF( DOXYGEN_DOT_PATH )
        SET( HAVE_DOT "YES" )
    ENDIF()
    
    CONFIGURE_FILE( ${PROJECT_SOURCE_DIR}/doc/doxyfile.cmake
        ${PROJECT_BINARY_DIR}/doc/doxyfile
    )
    ADD_CUSTOM_TARGET( Documentation ${DOXYGEN_EXECUTABLE}
        ${PROJECT_BINARY_DIR}/doc/doxyfile
    )

    add_subdirectory( doc/images )
endif()
